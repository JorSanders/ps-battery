on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      force:
        description: "Force new release even if no user-facing commits exist"
        required: false
        default: "true"

permissions:
  contents: write
  id-token: write
  issues: write
  pull-requests: write

name: release

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: actions/checkout@v4

      - id: release
        uses: googleapis/release-please-action@v4
        with:
          release-type: rust
          manifest-file: Cargo.toml
          config-file: .release-please-config.json
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Force release manually if none was created
        if: ${{ steps.release.outputs.release_created != 'true' && github.event.inputs.force == 'true' }}
        run: |
          echo "Forcing release..."
          git fetch --tags
          VERSION="v$(date +'%Y.%m.%d-%H%M')"
          gh release create "$VERSION" --notes "Manual forced release"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created == 'true' || github.event.inputs.force == 'true' }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Build release binary
        run: cargo build --release

      - name: Install cosign
        run: |
          winget install -e --id Sigstore.cosign || choco install cosign -y

      - name: Sign binary with Sigstore
        run: |
          cosign sign-blob target/release/ps-battery.exe `
            --output-signature target/release/ps-battery.exe.sig `
            --yes

      - name: Upload .exe and signature to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.release-please.outputs.tag_name || format('v{0}', github.run_id) }}
          files: |
            target/release/ps-battery.exe
            target/release/ps-battery.exe.sig
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
